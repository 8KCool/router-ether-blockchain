// Factory "morphs" into a Pudding class.
// The reasoning is that calling load in each context
// is cumbersome.

(function() {

  var contract_data = {
    abi: [{"constant":false,"inputs":[{"name":"main_signature","type":"string"},{"name":"length_signature","type":"string"},{"name":"destination","type":"address"}],"name":"registerLengthFunction","outputs":[],"type":"function"},{"constant":false,"inputs":[{"name":"_fallback","type":"address"}],"name":"setFallback","outputs":[],"type":"function"},{"constant":true,"inputs":[],"name":"fallback","outputs":[{"name":"","type":"address"}],"type":"function"},{"constant":false,"inputs":[{"name":"sig","type":"bytes4"}],"name":"lookup","outputs":[{"name":"destination","type":"address"},{"name":"outsize","type":"uint256"},{"name":"length_destination","type":"address"},{"name":"length_sig","type":"bytes4"}],"type":"function"},{"constant":false,"inputs":[{"name":"_admin","type":"address"}],"name":"setAdmin","outputs":[],"type":"function"},{"constant":false,"inputs":[{"name":"signature","type":"string"}],"name":"stringToSig","outputs":[{"name":"","type":"bytes4"}],"type":"function"},{"constant":true,"inputs":[{"name":"","type":"bytes4"}],"name":"pointers","outputs":[{"name":"destination","type":"address"},{"name":"outsize","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[{"name":"signature","type":"string"},{"name":"destination","type":"address"},{"name":"outsize","type":"uint256"}],"name":"register","outputs":[],"type":"function"},{"constant":true,"inputs":[{"name":"","type":"bytes4"}],"name":"length_pointers","outputs":[{"name":"sig","type":"bytes4"},{"name":"destination","type":"address"}],"type":"function"},{"constant":true,"inputs":[],"name":"admin","outputs":[{"name":"","type":"address"}],"type":"function"},{"inputs":[{"name":"_fallback","type":"address"}],"type":"constructor"}],
    binary: "60606040526040516020806105e183395060806040525160028054600160a060020a0319908116331790915560018054909116821790555061059c806100456000396000f3606060405236156100825760e060020a600035046318b31f94811461008457806332b12eac1461012a578063552079dc1461014c5780636f68e8d21461015e578063704b6c02146101ab5780637c34752f146101cd578063b5d7ccc314610254578063d393c8711461027d578063ec00e842146102e8578063f851a44014610319575b005b6100826004808035906020019082018035906020019191908080601f01602080910402602001604051908101604052809392919081815260200183838082843750506040805160208835808b0135601f81018390048302840183019094528383529799986044989297509190910194509092508291508401838280828437509496505093359350505050600254600160a060020a03908116339091161461041657610002565b610082600435600254600160a060020a0390811633909116146104a957610002565b61032b600154600160a060020a031681565b610348600435600160e060020a03198116600090815260208190526040812054819081908190600160a060020a03168114156104be57600154600160a060020a03169350602092506104f1565b610082600435600254600160a060020a03908116339091161461052c57610002565b6103a46004808035906020019082018035906020019191908080601f016020809104026020016040519081016040528093929190818152602001838380828437509496505050505050505b600081604051808280519060200190808383829060006004602084601f0104600f02600301f15090500191505060405180910390209050919050565b6000602081905260043581526040902080546001909101546103c291600160a060020a03169082565b6100826004808035906020019082018035906020019191908080601f0160208091040260200160405190810160405280939291908181526020018383808284375094965050933593505060443591505060025433600160a060020a0390811691161461054157610002565b6103e860043560036020526000908152604090205460e060020a8102906401000000009004600160a060020a031682565b61032b600254600160a060020a031681565b60408051600160a060020a03929092168252519081900360200190f35b6040518085600160a060020a0316815260200184815260200183600160a060020a03168152602001827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200194505050505060405180910390f35b60408051600160e060020a0319929092168252519081900360200190f35b6040518083600160a060020a031681526020018281526020019250505060405180910390f35b60408051600160e060020a0319939093168352600160a060020a039190911660208301528051918290030190f35b60406040519081016040528061042b84610218565b81526020018290526003600061044086610218565b600160e060020a03191681526020818101929092526040016000208251815493909201516401000000000277ffffffffffffffffffffffffffffffffffffffff000000001960e060020a90930463ffffffff199094169390931791909116919091179055505050565b60018054600160a060020a0319168217905550565b600160e060020a031985166000908152602081905260409020805460019190910154600160a060020a0391909116945092505b5050600160e060020a031983166000908152600360205260409020546401000000008104600160a060020a03169060e060020a029193509193565b60028054600160a060020a0319168217905550565b604080518082019091528281526020810182905260008061056186610218565b600160e060020a031916815260208181019290925260400160002082518154600160a060020a0319161781559101516001919091015550505056",
    unlinked_binary: "60606040526040516020806105e183395060806040525160028054600160a060020a0319908116331790915560018054909116821790555061059c806100456000396000f3606060405236156100825760e060020a600035046318b31f94811461008457806332b12eac1461012a578063552079dc1461014c5780636f68e8d21461015e578063704b6c02146101ab5780637c34752f146101cd578063b5d7ccc314610254578063d393c8711461027d578063ec00e842146102e8578063f851a44014610319575b005b6100826004808035906020019082018035906020019191908080601f01602080910402602001604051908101604052809392919081815260200183838082843750506040805160208835808b0135601f81018390048302840183019094528383529799986044989297509190910194509092508291508401838280828437509496505093359350505050600254600160a060020a03908116339091161461041657610002565b610082600435600254600160a060020a0390811633909116146104a957610002565b61032b600154600160a060020a031681565b610348600435600160e060020a03198116600090815260208190526040812054819081908190600160a060020a03168114156104be57600154600160a060020a03169350602092506104f1565b610082600435600254600160a060020a03908116339091161461052c57610002565b6103a46004808035906020019082018035906020019191908080601f016020809104026020016040519081016040528093929190818152602001838380828437509496505050505050505b600081604051808280519060200190808383829060006004602084601f0104600f02600301f15090500191505060405180910390209050919050565b6000602081905260043581526040902080546001909101546103c291600160a060020a03169082565b6100826004808035906020019082018035906020019191908080601f0160208091040260200160405190810160405280939291908181526020018383808284375094965050933593505060443591505060025433600160a060020a0390811691161461054157610002565b6103e860043560036020526000908152604090205460e060020a8102906401000000009004600160a060020a031682565b61032b600254600160a060020a031681565b60408051600160a060020a03929092168252519081900360200190f35b6040518085600160a060020a0316815260200184815260200183600160a060020a03168152602001827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200194505050505060405180910390f35b60408051600160e060020a0319929092168252519081900360200190f35b6040518083600160a060020a031681526020018281526020019250505060405180910390f35b60408051600160e060020a0319939093168352600160a060020a039190911660208301528051918290030190f35b60406040519081016040528061042b84610218565b81526020018290526003600061044086610218565b600160e060020a03191681526020818101929092526040016000208251815493909201516401000000000277ffffffffffffffffffffffffffffffffffffffff000000001960e060020a90930463ffffffff199094169390931791909116919091179055505050565b60018054600160a060020a0319168217905550565b600160e060020a031985166000908152602081905260409020805460019190910154600160a060020a0391909116945092505b5050600160e060020a031983166000908152600360205260409020546401000000008104600160a060020a03169060e060020a029193509193565b60028054600160a060020a0319168217905550565b604080518082019091528281526020810182905260008061056186610218565b600160e060020a031916815260208181019290925260400160002082518154600160a060020a0319161781559101516001919091015550505056",
    address: "0x2dce01dfae7e17c9dc510d64469d17406f639bef",
    generated_with: "2.0.9",
    contract_name: "Resolver"
  };

  function Contract() {
    if (Contract.Pudding == null) {
      throw new Error("Resolver error: Please call load() first before creating new instance of this contract.");
    }

    Contract.Pudding.apply(this, arguments);
  };

  Contract.load = function(Pudding) {
    Contract.Pudding = Pudding;

    Pudding.whisk(contract_data, Contract);

    // Return itself for backwards compatibility.
    return Contract;
  }

  Contract.new = function() {
    if (Contract.Pudding == null) {
      throw new Error("Resolver error: Please call load() first before calling new().");
    }

    return Contract.Pudding.new.apply(Contract, arguments);
  };

  Contract.at = function() {
    if (Contract.Pudding == null) {
      throw new Error("Resolver error: Please call load() first before calling at().");
    }

    return Contract.Pudding.at.apply(Contract, arguments);
  };

  Contract.deployed = function() {
    if (Contract.Pudding == null) {
      throw new Error("Resolver error: Please call load() first before calling deployed().");
    }

    return Contract.Pudding.deployed.apply(Contract, arguments);
  };

  if (typeof module != "undefined" && typeof module.exports != "undefined") {
    module.exports = Contract;
  } else {
    // There will only be one version of Pudding in the browser,
    // and we can use that.
    window.Resolver = Contract;
  }

})();
